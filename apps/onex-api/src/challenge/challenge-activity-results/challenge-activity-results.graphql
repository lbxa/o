"""
Results for a challenge activity are recorded per user per activity.
In the future we may want to support multiple activities per challenge.

There can be multiple results per activity per user.
"""
type ChallengeActivityResult implements Node & Timestamps {
  id: ID!
  user: User!
  activity: ChallengeActivity!
  "Raw floating point value"
  result: Float!
  "Transformed result for display purposes"
  formattedResult: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input ChallengeActivityResultCreateInput {
  challengeId: ID!
  activityId: ID!
  userId: ID!
  result: Float!
}

type ChallengeActivityResultEdge {
  node: ChallengeActivityResult!
  cursor: String!
}

type ChallengeActivityResultConnection {
  edges: [ChallengeActivityResultEdge!]
  pageInfo: PageInfo!
}

"""
Top movers are the users with the largest relative
movement for a given activity.
"""
type ChallengeActivityTopMover implements Node & Timestamps {
  id: ID!
  user: User!
  activity: ChallengeActivity!
  "A percentage - not a float"
  result: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

type ChallengeActivityTopMoverEdge {
  node: ChallengeActivityTopMover!
  cursor: String!
}

type ChallengeActivityTopMoverConnection {
  edges: [ChallengeActivityTopMoverEdge!]
  pageInfo: PageInfo!
}

extend type Challenge {
  activityTopResults(first: Int, after: String): ChallengeActivityResultConnection
  activityTopMovers(first: Int, after: String): ChallengeActivityResultConnection
}

type CreateChallengeActivityResultPayload {
  challengeActivityResultEdge: ChallengeActivityResultEdge!
}

extend type Query {
  challengeActivityResults(challengeId: ID!, first: Int, after: String): ChallengeActivityResultConnection!
  challengeActivityTopResults(challengeId: ID!, first: Int, after: String): ChallengeActivityResultConnection!
  challengeActivityTopMovers(challengeId: ID!, first: Int, after: String): ChallengeActivityResultConnection!
}

extend type Mutation {
  challengeActivityResultCreate(
    challengeActivityResultCreateInput: ChallengeActivityResultCreateInput!
  ): CreateChallengeActivityResultPayload!
}
