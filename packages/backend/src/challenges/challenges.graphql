enum ChallengeMode {
  BLIND_TRUST
  VERIFIED_ONLY
}

enum ChallengeCadence {
  NONE
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
  YEARLY
}

type Challenge implements Node & Timestamps {
  id: ID!
  name: String!
  description: String
  community: Community
  startDate: DateTime
  endDate: DateTime
  mode: ChallengeMode
  cadence: ChallengeCadence
  createdAt: DateTime
  updatedAt: DateTime

  members: [User!]
  memberships: [ChallengeMembership!]
  invitations: [ChallengeInvitation!]
}

enum ChallengeActivityType {
  REPETITIONS
  WEIGHTLIFTING
  TIME_BASED
  DISTANCE
  SOCIAL
}

enum ChallengeActivityUnits {
  KG
  LB
  M
  FT
  SECONDS
  MINUTES
  HOURS
  MI
  KM
  PERCENT
  NONE
}

enum ChallengeActivityMeasurement {
  COUNTING
  DURATION
  IMPROVEMENT
}

enum ChallengeActivityGoal {
  LOWEST_NUMBER
  HIGHEST_NUMBER
  SPECIFIC_TARGET
  SHORTEST_TIME
  LONGEST_TIME
  MOST_IMPROVED
}

type ChallengeActivity implements Node & Timestamps {
  id: ID!
  challengeId: ID!
  type: ChallengeActivityType
  measurement: ChallengeActivityMeasurement
  goal: ChallengeActivityGoal
  target: Int
  unit: ChallengeActivityUnits
  createdAt: DateTime
  updatedAt: DateTime
}

input ChallengeActivityCreateInput {
  type: ChallengeActivityType!
  measurement: ChallengeActivityMeasurement!
  goal: ChallengeActivityGoal!
  target: Int
  unit: ChallengeActivityUnits!
}

type ChallengeMembership implements Node {
  id: ID!
  user: User!
  community: Community!
  challenge: Challenge!
  joinedAt: DateTime!
}

type ChallengeInvitation implements Node & Timestamps {
  id: ID!
  challenge: Challenge!
  inviter: User!
  invitee: User!
  status: InvitationStatus!
  createdAt: DateTime
  updatedAt: DateTime
  expiresAt: DateTime!
}

input ChallengeCreateInput {
  name: String!
  description: String!
  communityId: ID!
  startDate: DateTime!
  endDate: DateTime!
  mode: ChallengeMode!
  cadence: ChallengeCadence!
}

input ChallengeUpdateInput {
  id: ID!
  name: String
  description: String
  startDate: DateTime
  endDate: DateTime
}

type Query {
  challenge(id: ID!): Challenge
  challenges: [Challenge!]
  communityChallenges(communityId: ID!): [Challenge!]
  userChallenges(userId: ID!): [Challenge!]
  challengeInvitations(userId: ID!): [ChallengeInvitation!]
}

type Mutation {
  challengeCreate(
    challengeCreateInput: ChallengeCreateInput!
    challengeActivityCreateInput: ChallengeActivityCreateInput
  ): Challenge!
  challengeUpdate(challengeUpdateInput: ChallengeUpdateInput!): Challenge!
  challengeDelete(id: ID!): Boolean!
  challengeInvite(userId: ID!, challengeId: ID!): Boolean!
  challengeJoin(inviteId: ID!): Challenge!
  challengeLeave(id: ID!): Boolean!
}
