type User implements Node & Timestampable {
  id: ID!
  handle: String
  firstName: String
  lastName: String 
  email: String
  password: String
  createdAt: DateTime
  updatedAt: DateTime
  friends: [User!]
  communities: [Community!]
  searchFriends(searchTerm: String): [User!]!

  # TODO
  memberships: [CommunityMembership!]
  sentInvitations: [CommunityInvitation!]
  receivedInvitations: [CommunityInvitation!]
}

input UserUpdateInput {
  id: ID!
  firstName: String
  lastName: String
  handle: String
  email: String
}

type ValidEmailResponse {
  alreadyTaken: Boolean!
}

type Query {
  user: User!
  users: [User!]
  activeUser: User
  userValidateEmail(email: String!): ValidEmailResponse
  userSearch(searchTerm: String): [User!]
}

type Mutation {
  userUpdate(userUpdateInput: UserUpdateInput!): User!
  # removeUser(id: Int!): User
}
